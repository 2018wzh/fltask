name: Build

on:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            build_target: windows
            artifact_path: build/windows/x64/runner/Release
          - os: ubuntu-latest
            build_target: linux
            artifact_path: build/linux/x64/release/bundle
          - os: macos-latest
            build_target: macos
            artifact_path: build/macos/Build/Products/Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: pub-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      - name: Cache cargo registry + git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/target
          key: cargo-${{ runner.os }}-${{ hashFiles('rust/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Install Linux build deps
        if: matrix.build_target == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Install cargo-xcode (macOS)
        if: matrix.build_target == 'macos'
        run: cargo install cargo-xcode

      - name: Flutter pub get
        run: flutter pub get

      - name: Build Flutter (${% raw %}{{ matrix.build_target }}{% endraw %})
        run: flutter build ${{ matrix.build_target }} --debug

      - name: List build outputs (debug)
        run: |
          echo "Listing artifact directory: ${{ matrix.artifact_path }}" || true
          ls -R ${{ matrix.artifact_path }} || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.build_target }}
          if-no-files-found: warn
          compression-level: 6
          retention-days: 14
          path: |
            ${{ matrix.artifact_path }}/**/*
